syntax enable
syntax on
set guifont=Meslo\ LG\ S\ DZ\ for\ Powerline:h10
highlight DiffAdd cterm=none ctermfg=black ctermbg=green gui=none guifg=black guibg=green
highlight DiffDelete cterm=none ctermfg=black ctermbg=red gui=none guifg=black guibg=red
highlight DiffChange cterm=none ctermfg=black ctermbg=yellow gui=none guifg=black guibg=yellow 
highlight DiffText cterm=none ctermfg=black ctermbg=grey gui=none guifg=black guibg=grey 

set encoding=utf-8
set background=dark
set wrap
set tabstop=2
set expandtab
set shiftwidth=2
set autoindent
set vb
set nu
set nocompatible

" relative line numbers
"set rnu
" no menus, scrollbars, or other junk
set guioptions=

" make backspace delete characters
set backspace=2

" I like my leader being ','. It's easier to reach
let mapleader = ","

" Disable chimes
set visualbell
set t_vb = 
set visualbell t_vb=
au GuiEnter * set visualbell t_vb=

" disable backup and swap files
set nobackup
set noswapfile

" use the OS clipboard
set clipboard=unnamed"

" store more command history
set history=100 " Store more history (default is 20)
" store a bunch of undo history
set undolevels=400

" enable spell checking
set spell
" allow buffer switching without saving
set hidden

"Status line
set laststatus=2
"Filename
set statusline=%<%f\
"Options
set statusline+=%w%h%mi%r                 
"Git Hotness
set statusline+=%{fugitive#statusline()}
" Filetype
set statusline+=\ [%{&ff}/%Y]
"Directory
set statusline+=\ [%{getcwd()}]
"File info
set statusline+=%=%-14.(%l,%c%V%)\ %p%%

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_javascript_checkers = ['jshint']

"Show matching brackets/parenthesis
set showmatch
"Don't blink
set matchtime=0
"Find as you type search
set incsearch
"Highlight search terms
set hlsearch
"Windows can be 0 line high
set winminheight=0
"Case insensitive search
set ignorecase
"Case sensitive if we type an uppercase
set smartcase

function! DiffWithFileFromDisk()
    let filename=expand('%')
    let diffname = filename.'.fileFromBuffer'
    exec 'saveas! '.diffname
    diffthis
    vsplit
    exec 'edit '.filename
    diffthis
endfunction

let Tlist_Use_Right_Window   = 1
let @t='>>j'
nmap <Leader>j :CommandTJump<CR>
nmap <Leader>l : set list!<CR>
nmap <Leader>k :call DiffWithFileFromDisk()<CR>
nmap <Leader>f :Ack 
nmap <Leader>g :Tlist<CR>
nmap <Leader>r :TagbarToggle<CR>
nmap <Leader>n :NERDTreeToggle<CR>
nmap <Leader>z :FufFile<CR>
nmap <Leader>e :Explore<CR>
nmap <Leader>w :bp\|bd #<CR>
nmap <Leader>q <C-W>q<CR>
nmap <Leader>Q :qa!<CR>
nmap <Leader>c :diffthis<CR>
nmap <Leader>o :diffoff!<CR>

let showmarks_enable = 0
let g:airline_powerline_fonts = 1

call pathogen#incubate()
call pathogen#helptags()
call pathogen#infect()

python import sys; sys.path.append("/Library/Python/2.7/lib/python/site-packages")
python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup

filetype plugin indent on

cd ~/workspace
